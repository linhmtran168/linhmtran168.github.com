{"pageProps":{"article":{"title":"Ditching Oh-my-zsh for Prezto","slug":["2013","12","15","ditching-oh-my-zsh-for-prezto"],"uri":"2013/12/15/ditching-oh-my-zsh-for-prezto","updatedTime":"2013/12/15","content":"<h4>Oh My Zsh, full of features but slow</h4>\n<p>I'm a long time user of <a href=\"https://github.com/robbyrussell/oh-my-zsh\">Oh-my-zsh</a>. After setting up a new system (OSX or Linux, of course, no Windows), the first thing I often do is changing my default shell to Zsh and installing Oh-my-zsh. It's a brilliant configuration framework for zsh with a lot of themes and plugins that make it a joy to working in the terminal. But it has a major drawback, slow startup time. For me, with a lot of plugins enabled, it often takes several seconds for the terminal in iTerm2 to be fully ready.</p>\n<h4>Enter Prezto</h4>\n<p>I've heard of <a href=\"https://github.com/sorin-ionescu/prezto\">prezto</a> before, but at that time, to me, Oh-my-zsh is too good and the thought of having to learn the convention and update my current configuration to that of a new framework made me feel lazy :) But today, after reading a thread in StackOverflow that stated that Prezto is an improvement to Oh-my-zsh and it has no slow startup time issue, I decided to give it a try.</p>\n<p>Installing presto is really straight forward, just following the guide in its website (remember to uninstall Oh-my-zsh and backup your configuration).</p>\n<pre><code class=\"hljs language-sh\"><span class=\"hljs-comment\"># Uninstall oh my zsh</span>\n$ uninstall_oh_my_zsh\n\n<span class=\"hljs-comment\"># Open new shell, open zsh and clone the presto repo</span>\n$ git <span class=\"hljs-built_in\">clone</span> --recursive https://github.com/sorin-ionescu/prezto.git <span class=\"hljs-string\">\"<span class=\"hljs-variable\">${ZDOTDIR:-<span class=\"hljs-variable\">$HOME</span>}</span>/.zprezto\"</span>\n\n<span class=\"hljs-comment\"># Get prezto's default configuration</span>\n$ <span class=\"hljs-built_in\">setopt</span> EXTENDED_GLOB\n<span class=\"hljs-keyword\">for</span> rcfile <span class=\"hljs-keyword\">in</span> <span class=\"hljs-string\">\"<span class=\"hljs-variable\">${ZDOTDIR:-<span class=\"hljs-variable\">$HOME</span>}</span>\"</span>/.zprezto/runcoms/^README.md(.N); <span class=\"hljs-keyword\">do</span>\n  ln -s <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$rcfile</span>\"</span> <span class=\"hljs-string\">\"<span class=\"hljs-variable\">${ZDOTDIR:-<span class=\"hljs-variable\">$HOME</span>}</span>/.<span class=\"hljs-variable\">${rcfile:t}</span>\"</span>\n<span class=\"hljs-keyword\">done</span>\n\n<span class=\"hljs-comment\"># Change default shell to zsh</span>\n$ chsh -s /bin/zsh\n</code></pre>\n<p>After that, you are done, prezto is ready at your command. I was really impressed with prezto, even with a lot of modules enabled (git, rails, ruby, python, node...), it's still very fast compared to Oh-my-zsh. Now all that left is to configure prezto to my liking. I did have to convert my shell settings in Oh-my-zsh's <em><strong>.zshrc</strong></em> to that of Prezto but it only took a small amount of time. To modify and add custom configuration, in my case, you just have to make changes to those 3 files that prezto symlinks in your home folder: <em><strong>.zprofile</strong></em>, <em><strong>.zshrc</strong></em>, <em><strong>.zpreztorc</strong></em></p>\n<p>I added my custom paths to <strong>.zprofile</strong> so that they will be available for even apps outside of the terminal</p>\n<pre><code class=\"hljs language-sh\">...\n<span class=\"hljs-comment\"># GO</span>\n<span class=\"hljs-built_in\">export</span> GOPATH=<span class=\"hljs-variable\">$HOME</span>/SkyDrive/go\n\n<span class=\"hljs-comment\"># Set the list of directories that Zsh searches for programs.</span>\npath=(\n  /usr/<span class=\"hljs-built_in\">local</span>/{bin,sbin}\n  <span class=\"hljs-variable\">$GOPATH</span>/bin\n  <span class=\"hljs-variable\">$HOME</span>/.cabal/bin\n  /opt/homebrew-cask/Caskroom/postgres/latest/Postgres.app/Contents/MacOS/bin\n  /usr/<span class=\"hljs-built_in\">local</span>/heroku/bin\n  <span class=\"hljs-variable\">$path</span>\n)\n...\n</code></pre>\n<p>In <strong>.zshrc</strong> file, I added my aliases and some variables for working with python</p>\n<pre><code class=\"hljs language-sh\">...\n<span class=\"hljs-comment\"># Alias</span>\n<span class=\"hljs-comment\"># OSX</span>\n<span class=\"hljs-built_in\">alias</span> fixow=<span class=\"hljs-string\">'/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/Support/lsregister -kill -r -domain local -domain user;killall Finder;echo \"Open With has been rebuilt, Finder will relaunch\"'</span>\n<span class=\"hljs-comment\"># tmux</span>\n<span class=\"hljs-built_in\">alias</span> tma=<span class=\"hljs-string\">'tmux attach -d -t'</span>\n<span class=\"hljs-built_in\">alias</span> tmn=<span class=\"hljs-string\">'tmux new -s $(basename $(pwd))'</span>\n<span class=\"hljs-built_in\">alias</span> tml=<span class=\"hljs-string\">'tmux list-sessions'</span>\n<span class=\"hljs-comment\"># bower</span>\n<span class=\"hljs-built_in\">alias</span> bower=<span class=\"hljs-string\">'noglob bower'</span>\n\n<span class=\"hljs-comment\"># Python virtualenv configuration</span>\n<span class=\"hljs-built_in\">export</span> WORKON_HOME=<span class=\"hljs-variable\">$HOME</span>/.virtualenvs\n<span class=\"hljs-built_in\">export</span> VIRTUALENVWRAPPER_VIRTUALENV_ARGS=<span class=\"hljs-string\">'--no-site-packages'</span>\n...\n</code></pre>\n<p>And in <strong>.zpreztorc</strong>, I added the modules that I need (git, ruby, python, node...) and configure prezto to use a custom theme that I modified from the default sorin theme.</p>\n<pre><code class=\"hljs language-sh\">...\n<span class=\"hljs-comment\"># prezto modules</span>\n<span class=\"hljs-built_in\">zstyle</span> <span class=\"hljs-string\">':prezto:load'</span> pmodule \\\n  <span class=\"hljs-string\">'environment'</span> \\\n  <span class=\"hljs-string\">'terminal'</span> \\\n  <span class=\"hljs-string\">'editor'</span> \\\n  <span class=\"hljs-string\">'history'</span> \\\n  <span class=\"hljs-string\">'history-substring-search'</span> \\\n  <span class=\"hljs-string\">'directory'</span> \\\n  <span class=\"hljs-string\">'spectrum'</span> \\\n  <span class=\"hljs-string\">'utility'</span> \\\n  <span class=\"hljs-string\">'completion'</span> \\\n  <span class=\"hljs-string\">'homebrew'</span> \\\n  <span class=\"hljs-string\">'osx'</span> \\\n  <span class=\"hljs-string\">'ruby'</span> \\\n  <span class=\"hljs-string\">'rails'</span> \\\n  <span class=\"hljs-string\">'git'</span> \\\n  <span class=\"hljs-string\">'node'</span> \\\n  <span class=\"hljs-string\">'python'</span> \\\n  <span class=\"hljs-string\">'haskell'</span> \\\n  <span class=\"hljs-string\">'syntax-highlighting'</span> \\\n  <span class=\"hljs-string\">'tmux'</span> \\\n  <span class=\"hljs-string\">'utility'</span> \\\n  <span class=\"hljs-string\">'prompt'</span>\n...\n<span class=\"hljs-comment\"># presto theme</span>\n<span class=\"hljs-built_in\">zstyle</span> <span class=\"hljs-string\">':prezto:module:prompt'</span> theme <span class=\"hljs-string\">'superlinh'</span>\n</code></pre>\n<p>And tada, this is my final product:</p>\n<p>![Prezto Image]({{ site.baseurl }}/assets/shell_prezto.png)</p>\n<p>Generally, I'm pretty pleased with prezto. I think I'm gonna use it in my terminal from now on. You can get all of my configurations and custom theme here on <a href=\"https://github.com/linhmtran168/mac_dotfiles\">Github</a>.</p>"}},"__N_SSG":true}