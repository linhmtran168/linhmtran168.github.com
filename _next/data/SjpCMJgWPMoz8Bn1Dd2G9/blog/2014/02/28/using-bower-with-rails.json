{"pageProps":{"article":{"title":"Using Bower with Rails","slug":["2014","02","28","using-bower-with-rails"],"uri":"2014/02/28/using-bower-with-rails","updatedTime":"2014/02/28","content":"<p>Rails got Asset Pipeline and to take full advantage of it, Ruby developers have created gems for almost notable frontend libraries. After all, it's pretty awesome to be able to  live entirely in Ruby world without the need to manually add Javascript, Css files. But not all frontend projects are gemified and even it's the case, there is no guarantee that those gems will be properly maintained. It's the reason for me to start using <strong><a href=\"http://bower.io/\">bower</a></strong> in my project.</p>\n<p>If you haven't heard about <strong>bower</strong>, you must have been living under a rock. It's now the de facto front-end package manager for the web. Almost (if not all) frontend libraries are now created to be compatible with <strong>bower</strong> (a <strong>bower</strong> package). Using <strong>bower</strong>, you can search, list, install, uninstall, update and manage dependencies for your projects.</p>\n<p>To start using <strong>bower</strong>, you must install <strong><a href=\"http://nodejs.org/\">nodejs</a></strong> and install <strong>bower</strong> using <strong><a href=\"https://www.npmjs.org/\">npm</a></strong>. Another dependency, but believe me, it's worth the effort.</p>\n<pre><code class=\"hljs language-sh\">$ brew install node\n$ npm install -g bower\n</code></pre>\n<p><em>(If you want to play more with nodejs, I recommend you to try <strong><a href=\"https://github.com/creationix/nvm\">nvm</a></strong> and use it to manage your nodejs installations)</em></p>\n<p>After that, create a <code>.bowerrc</code> file with the following contents at the root of the project folder to change default location for <strong>bower</strong>'s packages from <code>./bower_components</code> to <code>./vendor/bower_components</code> (you can choose another folder if you want):</p>\n<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"directory\"</span>: <span class=\"hljs-string\">\"vendor/assets/bower_components\"</span>\n}\n</code></pre>\n<p>Then, use <code>bower init</code> to generate a <code>bower.json</code> for your project. Using this file, You can manage your project information and dependencies:</p>\n<pre><code class=\"hljs language-json\">{\n  <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"Your App Name\"</span>,\n  <span class=\"hljs-attr\">\"version\"</span>: <span class=\"hljs-string\">\"0.0.1\"</span>,\n  <span class=\"hljs-attr\">\"authors\"</span>: [\n    <span class=\"hljs-string\">\"Your Email\"</span>\n  ],\n  <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"Description\"</span>,\n  <span class=\"hljs-attr\">\"keywords\"</span>: [\n  ],\n  <span class=\"hljs-attr\">\"license\"</span>: <span class=\"hljs-string\">\"MIT\"</span>,\n  <span class=\"hljs-attr\">\"private\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">\"ignore\"</span>: [\n    <span class=\"hljs-string\">\"**/.*\"</span>,\n    <span class=\"hljs-string\">\"node_modules\"</span>,\n    <span class=\"hljs-string\">\"bower_components\"</span>,\n    <span class=\"hljs-string\">\"vendor/assets/bower_components\"</span>,\n    <span class=\"hljs-string\">\"test\"</span>,\n    <span class=\"hljs-string\">\"tests\"</span>\n  ],\n  <span class=\"hljs-attr\">\"dependencies\"</span>: {\n    <span class=\"hljs-attr\">\"jquery\"</span>: <span class=\"hljs-string\">\"*\"</span>\n  }\n}\n</code></pre>\n<p>Then, you must add the <strong>bower</strong>'s package folder to Rails' Asset Pipeline by editing the <code>config/application.rb</code> as following:</p>\n<pre><code class=\"hljs language-ruby\">...\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Application</span> &#x3C; Rails::Application</span>\n  ...\n  <span class=\"hljs-comment\"># Include Bower components in compiled assets</span>\n  config.assets.paths &#x3C;&#x3C; Rails.root.join(<span class=\"hljs-string\">'vendor'</span>, <span class=\"hljs-string\">'assets'</span>, <span class=\"hljs-string\">'bower_components'</span>)\n<span class=\"hljs-keyword\">end</span>\n...\n</code></pre>\n<p>Now, <strong>bower</strong> is already at your command. You can search for packages, add them in <strong>dependencies</strong> section of <code>bower.json</code> file and <code>bower install</code> in your project's root folder to install all of them. Alternatively, you can install each package separately as following:</p>\n<pre><code class=\"hljs language-sh\">$ bower search pace\nSearch results:\n\n    pace git://github.com/HubSpot/pace.git\n    suit-utils-space git://github.com/suitcss/utils-space.git\n    ....\n$ bower install pace --save <span class=\"hljs-comment\"># --save will save the dependency to bower.json file, use --save-dev for development dependency</span>\n</code></pre>\n<p>To use bower packages, just add them to your asset manifest files like any other frontend library. For example:</p>\n<pre><code class=\"hljs language-javascript\"># app/assets/javascripts/application.js\n...\n<span class=\"hljs-comment\">//= require pace/pace</span>\n...\n</code></pre>\n<pre><code class=\"hljs language-gradle\">\n```css\n# app<span class=\"hljs-regexp\">/assets/</span>stylesheets/application.css\n...\n*= require pace<span class=\"hljs-regexp\">/themes/</span>pace-theme-minimal.css\n...\n</code></pre>\n<p>You can also list your installed bower packages, update or remove them</p>\n<pre><code class=\"hljs language-sh\">$ bower list\n$ bower update\n$ bower remove <span class=\"hljs-variable\">$package_name</span>\n</code></pre>\n<p>In my personal opinion, <strong>bower</strong> is really a great tool, it helps manage frontend libraries much more easier. Combine with Rails' Asset Pipeline, it makes a powerful tool to conquer any kind of frontend related projects.</p>"}},"__N_SSG":true}