<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Zsh | Linh M. Tran]]></title>
  <link href="http://linhmtran168.github.io/blog/categories/zsh/atom.xml" rel="self"/>
  <link href="http://linhmtran168.github.io/"/>
  <updated>2013-12-20T00:55:20+07:00</updated>
  <id>http://linhmtran168.github.io/</id>
  <author>
    <name><![CDATA[Linh M. Tran]]></name>
    <email><![CDATA[linh.mtran168@live.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Ditching Oh-my-zsh for Prezto]]></title>
    <link href="http://linhmtran168.github.io/blog/2013/12/15/ditching-oh-my-zsh-for-prezto/"/>
    <updated>2013-12-15T01:22:22+07:00</updated>
    <id>http://linhmtran168.github.io/blog/2013/12/15/ditching-oh-my-zsh-for-prezto</id>
    <content type="html"><![CDATA[<h4>Oh My Zsh, full of features but slow</h4>

<p>I&rsquo;m a long time user of <a href="https://github.com/robbyrussell/oh-my-zsh">Oh-my-zsh</a>. After setting up a new system (OSX or Linux, of course, no Windows), the first thing I often do is changing my default shell to Zsh and installing Oh-my-zsh. It&rsquo;s a brilliant configuration framework for zsh with a lot of themes and plugins that make it a joy to working in the terminal. But it has a major drawback, slow startup time. For me, with a lot of plugins enabled, it often takes several seconds for the terminal in iTerm2 to be fully ready.</p>

<h4>Enter Prezto</h4>

<p>I&rsquo;ve heard of <a href="https://github.com/sorin-ionescu/prezto">prezto</a> before, but at that time, to me, Oh-my-zsh is too good and the thought of having to learn the convention and update my current configuration to that of a new framework made me feel lazy :) But today, after reading a thread in StackOverflow that stated that Prezto is an improvement to Oh-my-zsh and it has no slow startup time issue, I decided to give it a try.</p>

<p>Installing presto is really straight forward, just following the guide in its website (remember to uninstall Oh-my-zsh and backup your configuration).</p>

<p>``` sh</p>

<h1>Uninstall oh my zsh</h1>

<p>$ uninstall_oh_my_zsh</p>

<h1>Open new shell, open zsh and clone the presto repo</h1>

<p>$ git clone &mdash;recursive <a href="https://github.com/sorin-ionescu/prezto.git">https://github.com/sorin-ionescu/prezto.git</a> &ldquo;${ZDOTDIR:&ndash;$HOME}/.zprezto&rdquo;</p>

<h1>Get prezto&rsquo;s default configuration</h1>

<p>$ setopt EXTENDED_GLOB
for rcfile in &ldquo;${ZDOTDIR:&ndash;$HOME}&rdquo;/.zprezto/runcoms/^README.md(.N); do
  ln -s &ldquo;$rcfile&rdquo; &ldquo;${ZDOTDIR:&ndash;$HOME}/.${rcfile:t}&rdquo;
done</p>

<h1>Change default shell to zsh</h1>

<p>$ chsh -s /bin/zsh
```</p>

<p>After that, you are done, prezto is ready at your command. I was really impressed with prezto, even with a lot of modules enabled (git, rails, ruby, python, node&hellip;), it&rsquo;s still very fast compared to Oh-my-zsh. Now all that left is to configure prezto to my liking. I did have to convert my shell settings in Oh-my-zsh&rsquo;s <strong><em>.zshrc</em></strong> to that of Prezto but it only took a small amount of time. To modify and add custom configuration, in my case, you just have to make changes to those 3 files that prezto symlinks in your home folder: <strong><em>.zprofile</em></strong>, <strong><em>.zshrc</em></strong>, <strong><em>.zpreztorc</em></strong></p>

<p>I added my custom paths to <strong>.zprofile</strong> so that they will be available for even apps outside of the terminal</p>

<p>``` sh
&hellip;</p>

<h1>GO</h1>

<p>export GOPATH=$HOME/SkyDrive/go</p>

<h1>Set the list of directories that Zsh searches for programs.</h1>

<p>path=(
  /usr/local/{bin,sbin}
  $GOPATH/bin
  $HOME/.cabal/bin
  /opt/homebrew-cask/Caskroom/postgres/latest/Postgres.app/Contents/MacOS/bin
  /usr/local/heroku/bin
  $path
)
&hellip;
```</p>

<p>In <strong>.zshrc</strong> file, I added my aliases and some variables for working with python</p>

<p>``` sh
&hellip;</p>

<h1>Alias</h1>

<h1>OSX</h1>

<p>alias fixow=&lsquo;/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/Support/lsregister -kill -r -domain local -domain user;killall Finder;echo &ldquo;Open With has been rebuilt, Finder will relaunch&rdquo;&rsquo;</p>

<h1>tmux</h1>

<p>alias tma=&lsquo;tmux attach -d -t&rsquo;
alias tmn=&lsquo;tmux new -s $(basename $(pwd))&rsquo;
alias tml=&lsquo;tmux list-sessions&rsquo;</p>

<h1>bower</h1>

<p>alias bower=&lsquo;noglob bower&rsquo;</p>

<h1>Python virtualenv configuration</h1>

<p>export WORKON_HOME=$HOME/.virtualenvs
export VIRTUALENVWRAPPER_VIRTUALENV_ARGS=&lsquo;&mdash;no-site-packages&rsquo;
&hellip;
```</p>

<p>And in <strong>.zpreztorc</strong>, I added the modules that I need (git, ruby, python, node&hellip;) and configure prezto to use a custom theme that I modified from the default sorin theme.</p>

<p>``` sh
&hellip;</p>

<h1>prezto modules</h1>

<p>zstyle &lsquo;:prezto:load&rsquo; pmodule \
  &lsquo;environment&rsquo; \
  &lsquo;terminal&rsquo; \
  &lsquo;editor&rsquo; \
  &lsquo;history&rsquo; \
  &lsquo;history-substring-search&rsquo; \
  &lsquo;directory&rsquo; \
  &lsquo;spectrum&rsquo; \
  &lsquo;utility&rsquo; \
  &lsquo;completion&rsquo; \
  &lsquo;homebrew&rsquo; \
  &lsquo;osx&rsquo; \
  &lsquo;ruby&rsquo; \
  &lsquo;rails&rsquo; \
  &lsquo;git&rsquo; \
  &lsquo;node&rsquo; \
  &lsquo;python&rsquo; \
  &lsquo;haskell&rsquo; \
  &lsquo;syntax-highlighting&rsquo; \
  &lsquo;tmux&rsquo; \
  &lsquo;utility&rsquo; \
  &lsquo;prompt&rsquo;
&hellip;</p>

<h1>presto theme</h1>

<p>zstyle &lsquo;:prezto:module:prompt&rsquo; theme &lsquo;superlinh&rsquo;
```
And tada, this is my final product
<img src="/images/shell_prezto.png" title="&lsquo;My Prezto&rsquo; &lsquo;My Prezto&rsquo;" ></p>

<p>Generally, I&rsquo;m pretty pleased with prezto. I think I&rsquo;m gonna use it in my terminal from now on. You can get all of my configurations and custom theme here on <a href="https://github.com/linhmtran168/mac_dotfiles">Github</a>.</p>
]]></content>
  </entry>
  
</feed>
