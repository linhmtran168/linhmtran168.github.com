<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Bower | Linh M. Tran]]></title>
  <link href="http://linhmtran168.github.io/blog/categories/bower/atom.xml" rel="self"/>
  <link href="http://linhmtran168.github.io/"/>
  <updated>2014-03-18T01:37:04+07:00</updated>
  <id>http://linhmtran168.github.io/</id>
  <author>
    <name><![CDATA[Linh M. Tran]]></name>
    <email><![CDATA[linh.mtran168@live.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Using Bower With Rails]]></title>
    <link href="http://linhmtran168.github.io/blog/2014/02/28/using-bower-with-rails/"/>
    <updated>2014-02-28T00:56:54+07:00</updated>
    <id>http://linhmtran168.github.io/blog/2014/02/28/using-bower-with-rails</id>
    <content type="html"><![CDATA[<p>Rails got Asset Pipeline and to take full advantage of it, Ruby developers have created gems for almost notable frontend libraries. After all, it&rsquo;s pretty awesome to be able to  live entirely in Ruby world without the need to manually add Javascript, Css files. But not all frontend projects are gemified and even it&rsquo;s the case, there is no guarantee that those gems will be properly maintained. It&rsquo;s the reason for me to start using <strong><a href="http://bower.io/">bower</a></strong> in my project.</p>

<p>If you haven&rsquo;t heard about <strong>bower</strong>, you must have been living under a rock. It&rsquo;s now the de facto front-end package manager for the web. Almost (if not all) frontend libraries are now created to be compatible with <strong>bower</strong> (a <strong>bower</strong> package). Using <strong>bower</strong>, you can search, list, install, uninstall, update and manage dependencies for your projects.</p>

<p>To start using <strong>bower</strong>, you must install <strong><a href="http://nodejs.org/">nodejs</a></strong> and install <strong>bower</strong> using <strong><a href="https://www.npmjs.org/">npm</a></strong>. Another dependency, but believe me, it&rsquo;s worth the effort.</p>

<p><code>sh
$ brew install node
$ npm install -g bower
</code>
<em>(If you want to play more with nodejs, I recommend you to try <strong><a href="https://github.com/creationix/nvm">nvm</a></strong> and use it to manage your nodejs installations)</em></p>

<p>After that, create a <code>.bowerrc</code> file with the following contents at the root of the project folder to change default location for <strong>bower</strong>&rsquo;s packages from <code>./bower_components</code> to <code>./vendor/bower_components</code> (you can choose another folder if you want):</p>

<p><code>json
{
  "directory": "vendor/assets/bower_components"
}
</code></p>

<p>Then, use <code>bower init</code> to generate a <code>bower.json</code> for your project. Using this file, You can manage your project information and dependencies:</p>

<p>``` json
{
  &ldquo;name&rdquo;: &ldquo;Your App Name&rdquo;,
  &ldquo;version&rdquo;: &ldquo;0.0.1&rdquo;,
  &ldquo;authors&rdquo;: [</p>

<pre><code>"Your Email"
</code></pre>

<p>  ],
  &ldquo;description&rdquo;: &ldquo;Description&rdquo;,
  &ldquo;keywords&rdquo;: [
  ],
  &ldquo;license&rdquo;: &ldquo;MIT&rdquo;,
  &ldquo;private&rdquo;: true,
  &ldquo;ignore&rdquo;: [</p>

<pre><code>"**/.*",
"node_modules",
"bower_components",
"vendor/assets/bower_components",
"test",
"tests"
</code></pre>

<p>  ],
  &ldquo;dependencies&rdquo;: {</p>

<pre><code>"jquery": "*"
</code></pre>

<p>  }
}
```</p>

<p>Then, you must add the <strong>bower</strong>&rsquo;s package folder to Rails' Asset Pipeline by editing the <code>config/application.rb</code> as following:</p>

<p><code>ruby
...
class Application &lt; Rails::Application
  ...
  # Include Bower components in compiled assets
  config.assets.paths &lt;&lt; Rails.root.join('vendor', 'assets', 'bower_components')
end
...
</code></p>

<p>Now, <strong>bower</strong> is already at your command. You can search for packages, add them in <strong>dependencies</strong> section of <code>bower.json</code> file and <code>bower install</code> in your project&rsquo;s root folder to install all of them. Alternatively, you can install each package separately as following:</p>

<p>``` sh
$ bower search pace
Search results:</p>

<pre><code>pace git://github.com/HubSpot/pace.git
suit-utils-space git://github.com/suitcss/utils-space.git
....
</code></pre>

<p>$ bower install pace &mdash;save # &mdash;save will save the dependency to bower.json file, use &mdash;save-dev for development dependency
```</p>

<p>To use bower packages, just add them to your asset manifest files like any other frontend library. For example:</p>

<p>``` javascript</p>

<h1>app/assets/javascripts/application.js</h1>

<p>&hellip;
//= require pace/pace
&hellip;
```</p>

<p>``` css</p>

<h1>app/assets/stylesheets/application.css</h1>

<p>&hellip;
*= require pace/themes/pace-theme-minimal.css
&hellip;
```</p>

<p>You can also list your installed bower packages, update or remove them</p>

<p><code>sh
$ bower list
$ bower update
$ bower remove $package_name
</code></p>

<p>In my personal opinion, <strong>bower</strong> is really a great tool, it helps manage frontend libraries much more easier. Combine with Rails' Asset Pipeline, it makes a powerful tool to conquer any kind of frontend related projects.</p>
]]></content>
  </entry>
  
</feed>
